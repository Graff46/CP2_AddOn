-- -*- mode: lua; encoding: windows-1251 -*-
class "opt_gameplay" (CUIWindow)

function opt_gameplay:__init() super()
end

function opt_gameplay:__finalize()

end

function opt_gameplay:InitControls(x, y, xml, handler)
	-- переработано для допопций. оригинальный код закомментен.
	self:Init(x,y, 738, 416)
	self:SetAutoDelete(true)
	
	self.bk = xml:InitFrame("frame_gameplay", self)
	
	xml:InitStatic("tab_gameplay:cap_difficulty",		self)
	
	handler.dynamic_bioradar 		= xml:InitCheck("tab_gameplay:check_bioradar", 				self)
	handler.autosave_enable 		= xml:InitCheck("tab_gameplay:check_autosave", 				self)
	handler.pause_on_load 			= xml:InitCheck("tab_gameplay:check_autopause", 			self)
	handler.animations	 			= xml:InitCheck("tab_gameplay:check_animations", 			self)
	handler.autograb_body 			= xml:InitCheck("tab_gameplay:check_autograb", 				self)
	handler.new_sms					= xml:InitCheck("tab_gameplay:check_sms", 					self)
	xml:InitStatic("tab_gameplay:cap_buy",			self)
	xml:InitStatic("tab_gameplay:texture_buy",		self)
	handler.buy 					= xml:InitEditBox("tab_gameplay:edit_buy", 					self)
	xml:InitStatic("tab_gameplay:cap_del",			self)
	xml:InitStatic("tab_gameplay:texture_del",		self)
	handler.del 					= xml:InitEditBox("tab_gameplay:edit_del", 					self)
	xml:InitStatic("tab_gameplay:cap_hardcore",		self)
	handler.fast_respawn 			= xml:InitCheck("tab_gameplay:check_fast_respawn", 			self)
	handler.transparent_treasure	= xml:InitCheck("tab_gameplay:check_transparent_treasure",	self)
	
--	xml:InitCheck("tab_gameplay:check_tips",			self)
	handler.check_tips = xml:InitCheck("tab_gameplay:check_tips",			self)
	xml:InitCheck("tab_gameplay:check_crosshair",		self)
	xml:InitCheck("tab_gameplay:check_dyn_crosshair", 	self)
	xml:InitCheck("tab_gameplay:check_show_weapon", 	self)
--	xml:InitCheck("tab_gameplay:check_dist", 			self)
	handler.check_dist = xml:InitCheck("tab_gameplay:check_dist", 			self)
	handler.autochange_difficulty = xml:InitCheck("tab_gameplay:check_autochange_difficulty",	self)
--	xml:InitComboBox("tab_gameplay:list_difficulty",	self)
	handler.list_difficulty = xml:InitComboBox("tab_gameplay:list_difficulty",	self)
	handler:Register(handler.list_difficulty, "list_difficulty")

	local btn = xml:Init3tButton	("tab_gameplay:btn_switch", self)
	btn:SetText("Дополнительные")
	handler:Register		(btn, "btn_switch1")
	handler:AddCallbackEx("btn_switch1", ui_events.BUTTON_CLICKED, handler.OnBtnSwitchGameplay)
end
