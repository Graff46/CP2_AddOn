
function add_location(sid, location, hint)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		
		if obj then
			if hint then
				level.map_add_object_spot(obj.id, location, hint)
			else
				level.map_add_object_spot(obj.id, location, "")
			end
		end
	end
end

function remove_location(sid, location)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj and level.map_has_object_spot(obj.id, location) then
			level.map_remove_object_spot(obj.id, location)
		end
	end
end

function remove_location_safe(sid, location)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj then
		   for a = 1, level.map_has_object_spot(obj.id, location), 1 do
			   level.map_remove_object_spot(obj.id, location)
		   end	
		end
	end
end

function is_map_spot_present(sid, location)
	local sim = alife()
	if sim then
		local obj = sim:story_object(sid)
		if obj and level.map_has_object_spot(obj.id, location) ~= 0 then
		   return true
		end
	end
	return false
end

local lv_changers = {
	[91]   = { 1, "to_garbage" },
	[191] = { 4, "to_agroprom" },
	[192] = { 4, "to_agroprom" },
	[193] = { 3, "to_escape" },
	[194]  = { 1, "to_bar" },
	[195]  = { 2, "to_darkvalley" },
	[196]  = { 2, "to_darkvalley" },
	[11500]  = { 3, "to_puzir" },
	[11502]  = { 4, "to_peshera" },
	[12501]  = { 1, "to_garbage" },
	[11503]  = { 2, "to_peshera" },
	[11504]  = { 5, "to_garbage" },
	[11505]  = { 5, "to_agroprom" },
	[12506]  = { 1, "to_aver" },
	[97081]  = { 5, "to_peshera" },
	[97093]  = { 2, "to_garbage" },
	[11507]  = { 3, "to_garbage" },
	[11508]  = { 2, "to_darkvalley" },
	[11509]  = { 1, "to_military" },
	[11510]  = { 4, "to_av_peshera" },
	[11511]  = { 5, "to_aver" },
	[11512]  = { 5, "to_yantar" },
	[11513]  = { 4, "to_aver" },
	[11514]  = { 3, "to_aver" },
	[11515]  = { 3, "to_av_peshera" },
	[11516]  = { 4, "to_limansk" },
	[11517]  = { 3, "to_red_forest" },
	[11518]  = { 1, "to_hospital" },
	[11519]  = { 1, "to_limansk" },
	[97094]  = { 4, "to_warlab" },
	[97095]  = { 5, "to_brainlab" },
	[97096]  = { 5, "to_generators" },
	[220101]  = { 5, "to_control_monolith" },
	[97097]  = { 5, "to_military" },
	[97098]  = { 5, "to_warlab" },
	[11521]  = { 1, "to_hospital" },
	[11522]  = { 3, "to_warlab" },
	[11524]  = { 3, "to_atp" },
	[11525]  = { 4, "to_limansk" },
	[11526]  = { 1, "to_radar" },
	[11527]  = { 2, "to_puzir" },
	[11528]  = { 4, "to_red_forest" },
	[11529]  = { 4, "to_limansk" },
	[11530]  = { 3, "to_hospital" },
	[11531]  = { 1, "to_hospital" },
	[11532]  = { 3, "to_lost_village" },
	[11533]  = { 2, "to_military" },
	[11534]  = { 4, "to_marsh" },
	[11535]  = { 4, "to_marsh" },
	[11536]  = { 3, "to_marsh" },
	[11537]  = { 2, "to_escape" },
	[11538]  = { 2, "to_escape" },
	[11539]  = { 1, "to_agroprom" },
	[18114]  = { 3, "to_atp" },
	[391]  = { 2, "to_garbage" },
	[392]  = { 2, "to_garbage" },
	[415]  = { 2, "to_garbage" },
	[416]  = { 2, "to_garbage" },
	[417]  = { 2, "to_escape" },
	[608]  = { 3, "to_yantar" },
	[592]  = { 1, "to_military" },
	[593]  = { 3, "to_garbage" },
	[97101]  = { 1, "to_lost_village" },
	[594]  = { 5, "bar_rostok" },
	[18022]  = { 1, "bar_rostok" },
	[771]  = { 4, "to_bar" },
	[773]  = { 2, "to_radar" },
	[925]  = { 2, "to_rostok" },
	[1007]  = { 1, "to_pripyat" },
	[1008]  = { 3, "to_military" },
	[833]  = { 3, "to_radar" },
	[832]  = { 1, "to_aes" },
	[6001]  = { 3, "to_pripyat" },
	[6002]  = { 2, "to_darkvalley" },
	[9100]  = { 3, "to_escape" },
	[9101]  = { 4, "to_agroprom" },
	[9102]  = { 1, "to_yantar" },
	[9103]  = { 3, "to_agroprom" },
	[9104]  = { 4, "to_military" },
	[9105]  = { 4, "to_rostok" },
	[9106]  = { 1, "to_radar" },
	[9107]  = { 2, "to_darkvalley" },
	[9108]  = { 3, "to_yantar" },
	[9109]  = { 1, "to_radar" },
	[9110]  = { 1, "to_military" },
	[9111]  = { 3, "to_darkvalley" },
	[31410]  = { 5, "to_bunker" },
	[31510]  = { 5, "to_sarcofag" },
	[21410]  = { "", "to_sarcofag" },
	[31610]  = { 5, "to_stancia_2" },
	[79891]  = { "", "to_stancia_2" },
	[31710]  = { 3, "to_sarcofag" },
	[33001]  = { 3, "to_marsh" },
	[14002]  = { 4, "to_marsh" },
	[14101]  = { 1, "to_limansk" },
	[14091]  = { 4, "to_red_forest" },
	[97099]  = { 2, "to_atp" },
	[97100]  = { 4, "to_lost_village" },
	[97102]  = { 3, "to_aes" },
	[97115]  = { 1, "to_stancia_2" },
	[97103]  = { 3, "to_generators" },
	[97104]  = { 3, "to_agroprom" },
	[97105]  = { 3, "to_marsh" },
	[97106]  = { 3, "to_pripyat" },
	[97107]  = { 2, "to_generators" },
	[97108]  = { 1, "to_warlab" },
	[97109]  = { 2, "to_limansk" },
	[97110]  = { 2, "to_atp" },
	[97111]  = { 3, "to_rostok" },
	[97112]  = { 4, "to_dead_city" },
	[97113]  = { 2, "to_zaton" },
	[97114]  = { 2, "to_dead_city" },
	[1100066]  = { 4, "to_escape" },
	[97071]  = { 4, "to_puzir" },
	[97021]  = { 5, "to_av_peshera" },
	[11506]  = { 2, "to_darkvalley" },
	[130000]  = { 1, "to_east_pripyat" },
	[131000]  = { 4, "to_east_pripyat" },
	[132000]  = { 1, "to_puzir" },
	[130021]  = { 3, "to_labx8" },
	[130022]  = { 5, "to_jupiter_underground" },
	[130023]  = { 5, "to_east_pripyat" },
	[130024]  = { 2, "to_jupiter" },
	[130025]  = { 3, "to_jupiter_underground" },
	[130026]  = { 1, "to_zaton" },
	[130027]  = { 4, "to_east_pripyat" },
	[130028]  = { 4, "to_pripyat" },
	[130029]  = { 2, "to_east_pripyat" },
	[130030]  = { 1, "to_east_pripyat" },
	[130031]  = { 3, "to_jupiter" },
	[130032]  = { 1, "to_zaton" },
	[130033]  = { 4, "to_east_pripyat" },
	[130034]  = { 5, "to_east_pripyat" },
	[130035]  = { 5, "to_sarcofag" },
	[130036]  = { 4, "to_aes" },
	[97001]  = { 4, "to_atp" }
}

function add_lchanger_location()
	local sim = alife()
	local add_spot =level.map_add_object_spot_ser
	local obj
	for sid, t in pairs(lv_changers) do
		obj = sim:story_object(sid)
		if obj then
			add_spot( obj.id, "level_changer"..tostring( t[1] ), t[2] )
		end
	end
end


function set_task_state(id_state, id_task, id_subtask)
	if db.actor then
		db.actor:set_task_state(id_state, id_task, id_subtask)
	end
end

function notify_new_task()
end
